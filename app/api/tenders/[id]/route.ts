import { type NextRequest, NextResponse } from "next/server"

// Mock database
const tenders = [
  {
    id: "T001",
    title: "üõ£Ô∏è ·ã®·àò·äï·åà·ãµ ·åç·äï·â£·â≥ ·ä•·äì ·àõ·àª·àª·ã´ ·çï·àÆ·åÄ·ä≠·âµ",
    description: "·ã®·ä®·â∞·àõ·ãç ·ãã·äì ·àò·äï·åà·ã∂·âΩ ·åç·äï·â£·â≥ ·ä•·äì ·àõ·àª·àª·ã´ ·àµ·à´ ·àà·àõ·ä®·äì·ãà·äï ·ã®·àö·âΩ·àç ·â∞·âã·à´·å≠ ·ãµ·à≠·åÖ·âµ ·ã≠·çà·àà·åã·àç·ç¢",
    organization: "·ã®·ä†·ã≤·àµ ·ä†·â†·â£ ·ä®·â∞·àõ ·ä†·àµ·â∞·ã≥·ã∞·à≠",
    organizationId: 1,
    category: "·åç·äï·â£·â≥",
    status: "active",
    publishDate: "2024-01-15",
    deadline: "2024-02-15",
    budget: 50000000,
    location: "·ä†·ã≤·àµ ·ä†·â†·â£",
    requirements: [
      "·â¢·ã´·äï·àµ 10 ·ãì·àò·âµ ·ã®·àµ·à´ ·àç·àù·ãµ",
      "·ã®·åç·äï·â£·â≥ ·çà·âÉ·ãµ ·ã∞·à®·åÉ 1",
      "·ã®·â∞·àü·àã ·ã®·â¥·ä≠·äí·ä≠ ·à∞·à´·â∞·äû·âΩ",
      "·ã®·â∞·àü·àã ·ã®·åç·äï·â£·â≥ ·àò·à≥·à™·ã´·ãé·âΩ",
      "·ã®·çã·ã≠·äì·äï·àµ ·ä†·âÖ·àù ·àõ·à®·åã·åà·å´",
    ],
    documents: [
      { name: "·ã®·å®·à®·â≥ ·à∞·äê·ãµ", size: "2.5 MB", type: "PDF", url: "/documents/tender-doc-1.pdf" },
      { name: "·ã®·â¥·ä≠·äí·ä≠ ·àò·åç·àà·å´", size: "1.8 MB", type: "PDF", url: "/documents/tech-spec-1.pdf" },
    ],
    applications: [],
    timeline: [
      { date: "2024-01-15", event: "·å®·à®·â≥ ·â≥·âµ·àü·àç", status: "completed" },
      { date: "2024-01-20", event: "·ã®·âÖ·ãµ·àò ·å®·à®·â≥ ·àµ·â•·à∞·â£", status: "completed" },
      { date: "2024-02-01", event: "·å•·ã´·âÑ·ãé·âΩ ·ã®·àò·å®·à®·àª ·âÄ·äï", status: "upcoming" },
      { date: "2024-02-15", event: "·ã®·àõ·àò·àç·ä®·âª ·ã®·àò·å®·à®·àª ·âÄ·äï", status: "upcoming" },
      { date: "2024-02-20", event: "·å®·à®·â≥ ·àò·ä≠·çà·âµ", status: "upcoming" },
    ],
    contact: {
      name: "·ä†·â∂ ·â∞·àµ·çã·ã¨ ·àò·äï·åç·àµ·â±",
      position: "·ã®·å®·à®·â≥ ·ä†·àµ·â∞·â£·â£·à™",
      phone: "+251-11-123-4567",
      email: "tesfaye.mengistu@addisababa.gov.et",
    },
    createdAt: "2024-01-15T08:00:00Z",
  },
]

export async function GET(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const tender = tenders.find((t) => t.id === params.id)

    if (!tender) {
      return NextResponse.json({ error: "·å®·à®·â≥ ·ä†·àç·â∞·åà·äò·àù" }, { status: 404 })
    }

    // Add computed fields
    const tenderWithStats = {
      ...tender,
      applicants: tender.applications.length,
      budget: `${tender.budget.toLocaleString()} ·â•·à≠`,
    }

    return NextResponse.json({
      success: true,
      tender: tenderWithStats,
    })
  } catch (error) {
    console.error("Fetch tender error:", error)
    return NextResponse.json({ error: "·ã®·ä†·åà·àç·åç·àé·âµ ·àµ·àÖ·â∞·âµ" }, { status: 500 })
  }
}
